worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # HTTPS 요청 처리
    server {
        listen 443 ssl;
        server_name alphacat.kr;  # 도메인 이름

        ssl_certificate      ../../ssl/cert.pem;  # 인증서 경로 수정 필요
        ssl_certificate_key  ../../ssl/cert.pem;  # 개인 키 경로 수정 필요

        # SSL 최적화 설정 (선택 사항)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        location / {
            # Flask 서버로 HTTPS 요청을 전달
            proxy_pass https://127.0.0.1:5000;  # Flask가 HTTPS로 실행 중이면 https로 연결

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            # 클라이언트 요청 정보를 Flask로 전달
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP 요청을 HTTPS로 리디렉션하는 서버 블록
    server {
        listen 80;
        server_name alphacat.kr;  # 도메인 이름

        # HTTP를 HTTPS로 리디렉션
        return 301 https://$host$request_uri;
    }
}
